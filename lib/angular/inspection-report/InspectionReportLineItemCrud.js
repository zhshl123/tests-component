"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.inspectionReportLineItemCrud = exports.InspectionReportLineItemCrud = void 0;
const assertions_1 = require("@serenity-js/assertions");
const core_1 = require("@serenity-js/core");
const web_1 = require("@serenity-js/web");
const DefaultStaticParams_1 = require("../../DefaultStaticParams");
const common_1 = require("../common");
const abstract_1 = require("../common/abstract");
const PageName_1 = require("../common/statics/PageName");
const EditInspectionReportFields_1 = require("./components/EditInspectionReportFields");
const InspectionReportLineItemFields_1 = require("./components/InspectionReportLineItemFields");
class InspectionReportLineItemCrud {
    constructor() {
        this.openLineItemPage = (reportName) => core_1.Task.where(`#actor open inspection report line item page`, common_1.openPage.using(PageName_1.BROWSE_INSPECTION_REPORT), core_1.Wait.for(core_1.Duration.ofSeconds(3)), EditInspectionReportFields_1.browseInspectionReport.checkSearchResult(1, reportName, DefaultStaticParams_1.SUCCEEDED), EditInspectionReportFields_1.browseInspectionReport.clickButtonInGrid(DefaultStaticParams_1.EDIT), EditInspectionReportFields_1.inspectionReportAdd.checkPopupWindow(0), abstract_1.pageTabs.clickTab('Line Item'), core_1.Wait.for(core_1.Duration.ofSeconds(5)));
        this.addAllFields = (lineItemInfo) => {
            return core_1.Task.where(`#actor add inspection report line item`, this.deleteOldLineItems(), common_1.clickButton.using('Add Line'), InspectionReportLineItemFields_1.inspectionReportLineItem.selectDropdownItem('Labor', 1, 4, lineItemInfo.rowsHash().SOVItem), InspectionReportLineItemFields_1.inspectionReportLineItem.selectDropdownItem('Labor', 1, 5, lineItemInfo.rowsHash().PrimeSub), InspectionReportLineItemFields_1.inspectionReportLineItem.selectDropdownItem('Labor', 1, 6, lineItemInfo.rowsHash().TradePosition), InspectionReportLineItemFields_1.inspectionReportLineItem.fillTextInputCell('Labor', 1, 7, lineItemInfo.rowsHash().NumberOfWorkers), InspectionReportLineItemFields_1.inspectionReportLineItem.fillTextInputCell('Labor', 1, 8, lineItemInfo.rowsHash().HoursWorked), InspectionReportLineItemFields_1.inspectionReportLineItem.fillTextAreaInputCell('Labor', 1, 9, lineItemInfo.rowsHash().Notes), common_1.clickButton.using('Add Line', 1), InspectionReportLineItemFields_1.inspectionReportLineItem.selectDropdownItem('Equipment', 1, 4, lineItemInfo.rowsHash().SOVItem_E), InspectionReportLineItemFields_1.inspectionReportLineItem.selectDropdownItem('Equipment', 1, 5, lineItemInfo.rowsHash().Status), InspectionReportLineItemFields_1.inspectionReportLineItem.fillTextInputCell('Equipment', 1, 6, lineItemInfo.rowsHash().Quantity_E), InspectionReportLineItemFields_1.inspectionReportLineItem.fillTextInputCell('Equipment', 1, 7, lineItemInfo.rowsHash().HoursWorked_E), InspectionReportLineItemFields_1.inspectionReportLineItem.fillTextAreaInputCell('Equipment', 1, 8, lineItemInfo.rowsHash().Notes_E), common_1.clickButton.using('Add Line', 2), InspectionReportLineItemFields_1.inspectionReportLineItem.selectDropdownItem('Material', 1, 4, lineItemInfo.rowsHash().SOVItem_M), InspectionReportLineItemFields_1.inspectionReportLineItem.selectDropdownItem('Material', 1, 5, lineItemInfo.rowsHash().Unit), InspectionReportLineItemFields_1.inspectionReportLineItem.fillTextInputCell('Material', 1, 6, lineItemInfo.rowsHash().Quantity_M), InspectionReportLineItemFields_1.inspectionReportLineItem.fillTextAreaInputCell('Material', 1, 7, lineItemInfo.rowsHash().Notes_M), 
            // 提交保存
            common_1.clickButton.using(DefaultStaticParams_1.SAVE), core_1.Wait.for(core_1.Duration.ofSeconds(5)));
        };
        this.updateAllFields = (lineItemInfo) => {
            return core_1.Task.where(`#actor update inspection report line item information`, InspectionReportLineItemFields_1.inspectionReportLineItem.selectDropdownItem('Labor', 1, 4, lineItemInfo.rowsHash().SOVItem), InspectionReportLineItemFields_1.inspectionReportLineItem.selectDropdownItem('Labor', 1, 5, lineItemInfo.rowsHash().PrimeSub), InspectionReportLineItemFields_1.inspectionReportLineItem.selectDropdownItem('Labor', 1, 6, lineItemInfo.rowsHash().TradePosition), InspectionReportLineItemFields_1.inspectionReportLineItem.fillTextInputCell('Labor', 1, 7, lineItemInfo.rowsHash().NumberOfWorkers), InspectionReportLineItemFields_1.inspectionReportLineItem.fillTextInputCell('Labor', 1, 8, lineItemInfo.rowsHash().HoursWorked), InspectionReportLineItemFields_1.inspectionReportLineItem.fillTextAreaInputCell('Labor', 1, 9, lineItemInfo.rowsHash().Notes), InspectionReportLineItemFields_1.inspectionReportLineItem.selectDropdownItem('Equipment', 1, 4, lineItemInfo.rowsHash().SOVItem_E), InspectionReportLineItemFields_1.inspectionReportLineItem.selectDropdownItem('Equipment', 1, 5, lineItemInfo.rowsHash().Status), InspectionReportLineItemFields_1.inspectionReportLineItem.fillTextInputCell('Equipment', 1, 6, lineItemInfo.rowsHash().Quantity_E), InspectionReportLineItemFields_1.inspectionReportLineItem.fillTextInputCell('Equipment', 1, 7, lineItemInfo.rowsHash().HoursWorked_E), InspectionReportLineItemFields_1.inspectionReportLineItem.fillTextAreaInputCell('Equipment', 1, 8, lineItemInfo.rowsHash().Notes_E), InspectionReportLineItemFields_1.inspectionReportLineItem.selectDropdownItem('Material', 1, 4, lineItemInfo.rowsHash().SOVItem_M), InspectionReportLineItemFields_1.inspectionReportLineItem.selectDropdownItem('Material', 1, 5, lineItemInfo.rowsHash().Unit), InspectionReportLineItemFields_1.inspectionReportLineItem.fillTextInputCell('Material', 1, 6, lineItemInfo.rowsHash().Quantity_M), InspectionReportLineItemFields_1.inspectionReportLineItem.fillTextAreaInputCell('Material', 1, 7, lineItemInfo.rowsHash().Notes_M), 
            // 提交保存
            common_1.clickButton.using(DefaultStaticParams_1.SAVE), core_1.Wait.for(core_1.Duration.ofSeconds(5)));
        };
        this.delete = (lineItemInfo) => {
            return core_1.Task.where(`#actor delete inspection report line item information`, core_1.Check.whether(InspectionReportLineItemFields_1.inspectionReportLineItem.checkboxInGrid('Labor', Number(lineItemInfo.rowsHash().No)), (0, assertions_1.isPresent)()).andIfSo(InspectionReportLineItemFields_1.inspectionReportLineItem.clickcheckboxInGrid('Labor', Number(lineItemInfo.rowsHash().No)), common_1.clickButton.using('Remove')), core_1.Check.whether(InspectionReportLineItemFields_1.inspectionReportLineItem.checkboxInGrid('Equipment', Number(lineItemInfo.rowsHash().No_E)), (0, assertions_1.isPresent)()).andIfSo(InspectionReportLineItemFields_1.inspectionReportLineItem.clickcheckboxInGrid('Equipment', Number(lineItemInfo.rowsHash().No_E)), common_1.clickButton.using('Remove', 1)), core_1.Check.whether(InspectionReportLineItemFields_1.inspectionReportLineItem.checkboxInGrid('Material', Number(lineItemInfo.rowsHash().No_M)), (0, assertions_1.isPresent)()).andIfSo(InspectionReportLineItemFields_1.inspectionReportLineItem.clickcheckboxInGrid('Material', Number(lineItemInfo.rowsHash().No_M)), common_1.clickButton.using('Remove', 2)), 
            // 提交保存
            common_1.clickButton.using(DefaultStaticParams_1.SAVE), core_1.Wait.for(core_1.Duration.ofSeconds(5)));
        };
        this.checkAllFieldsInfo = (lineItemInfo) => {
            return core_1.Task.where(`#actor check inspection report line item information`, core_1.Check.whether(InspectionReportLineItemFields_1.inspectionReportLineItem.checkboxInGrid('Labor', Number(lineItemInfo.rowsHash().No)), (0, assertions_1.isPresent)()).andIfSo(InspectionReportLineItemFields_1.inspectionReportLineItem.checkGridCellValue('Labor', 1, lineItemInfo.rowsHash().SOVItem, DefaultStaticParams_1.SUCCEEDED), InspectionReportLineItemFields_1.inspectionReportLineItem.checkGridCellValue('Labor', 1, lineItemInfo.rowsHash().PrimeSub, DefaultStaticParams_1.SUCCEEDED), InspectionReportLineItemFields_1.inspectionReportLineItem.checkGridCellValue('Labor', 1, lineItemInfo.rowsHash().TradePosition, DefaultStaticParams_1.SUCCEEDED), InspectionReportLineItemFields_1.inspectionReportLineItem.checkGridCellValue('Labor', 1, lineItemInfo.rowsHash().NumberOfWorkers, DefaultStaticParams_1.SUCCEEDED), InspectionReportLineItemFields_1.inspectionReportLineItem.checkGridCellValue('Labor', 1, lineItemInfo.rowsHash().HoursWorked, DefaultStaticParams_1.SUCCEEDED), InspectionReportLineItemFields_1.inspectionReportLineItem.checkGridCellValue('Labor', 1, lineItemInfo.rowsHash().Notes, DefaultStaticParams_1.SUCCEEDED)), core_1.Check.whether(InspectionReportLineItemFields_1.inspectionReportLineItem.checkboxInGrid('Equipment', Number(lineItemInfo.rowsHash().No_E)), (0, assertions_1.isPresent)()).andIfSo(InspectionReportLineItemFields_1.inspectionReportLineItem.checkGridCellValue('Equipment', 1, lineItemInfo.rowsHash().SOVItem_E, DefaultStaticParams_1.SUCCEEDED), InspectionReportLineItemFields_1.inspectionReportLineItem.checkGridCellValue('Equipment', 1, lineItemInfo.rowsHash().Status, DefaultStaticParams_1.SUCCEEDED), InspectionReportLineItemFields_1.inspectionReportLineItem.checkGridCellValue('Equipment', 1, lineItemInfo.rowsHash().Quantity_E, DefaultStaticParams_1.SUCCEEDED), InspectionReportLineItemFields_1.inspectionReportLineItem.checkGridCellValue('Equipment', 1, lineItemInfo.rowsHash().HoursWorked_E, DefaultStaticParams_1.SUCCEEDED), InspectionReportLineItemFields_1.inspectionReportLineItem.checkGridCellValue('Equipment', 1, lineItemInfo.rowsHash().Notes_E, DefaultStaticParams_1.SUCCEEDED)), core_1.Check.whether(InspectionReportLineItemFields_1.inspectionReportLineItem.checkboxInGrid('Material', Number(lineItemInfo.rowsHash().No_M)), (0, assertions_1.isPresent)()).andIfSo(InspectionReportLineItemFields_1.inspectionReportLineItem.checkGridCellValue('Material', 1, lineItemInfo.rowsHash().SOVItem_M, DefaultStaticParams_1.SUCCEEDED), InspectionReportLineItemFields_1.inspectionReportLineItem.checkGridCellValue('Material', 1, lineItemInfo.rowsHash().Unit, DefaultStaticParams_1.SUCCEEDED), InspectionReportLineItemFields_1.inspectionReportLineItem.checkGridCellValue('Material', 1, lineItemInfo.rowsHash().Quantity_M, DefaultStaticParams_1.SUCCEEDED), InspectionReportLineItemFields_1.inspectionReportLineItem.checkGridCellValue('Material', 1, lineItemInfo.rowsHash().Notes_M, DefaultStaticParams_1.SUCCEEDED)));
        };
        this.deleteOldLineItems = () => {
            return core_1.Task.where(`#actor open inspection report line item page`, core_1.Wait.for(core_1.Duration.ofSeconds(2)), core_1.Check.whether(InspectionReportLineItemFields_1.inspectionReportLineItem.gridListCell('Labor', 1, 4), (0, assertions_1.isPresent)()).andIfSo(InspectionReportLineItemFields_1.inspectionReportLineItem.clickSelectAllcheckbox('Labor'), common_1.clickButton.using('Remove'), EditInspectionReportFields_1.inspectionReportAdd.setCookie('deleteLineitemFalg', 'true')), core_1.Check.whether(InspectionReportLineItemFields_1.inspectionReportLineItem.gridListCell('Equipment', 1, 4), (0, assertions_1.isPresent)()).andIfSo(InspectionReportLineItemFields_1.inspectionReportLineItem.clickSelectAllcheckbox('Equipment'), common_1.clickButton.using('Remove', 1), EditInspectionReportFields_1.inspectionReportAdd.setCookie('deleteLineitemFalg', 'true')), core_1.Check.whether(InspectionReportLineItemFields_1.inspectionReportLineItem.gridListCell('Material', 1, 4), (0, assertions_1.isPresent)()).andIfSo(InspectionReportLineItemFields_1.inspectionReportLineItem.clickSelectAllcheckbox('Material'), common_1.clickButton.using('Remove', 2), EditInspectionReportFields_1.inspectionReportAdd.setCookie('deleteLineitemFalg', 'true')), core_1.Check.whether(web_1.Cookie.called('deleteLineitemFalg'), (0, assertions_1.isPresent)()).andIfSo(common_1.clickButton.using(DefaultStaticParams_1.SAVE), core_1.Wait.for(core_1.Duration.ofSeconds(5))));
        };
    }
}
exports.InspectionReportLineItemCrud = InspectionReportLineItemCrud;
exports.inspectionReportLineItemCrud = new InspectionReportLineItemCrud();
//# sourceMappingURL=InspectionReportLineItemCrud.js.map