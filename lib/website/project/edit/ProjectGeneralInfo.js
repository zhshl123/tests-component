"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.openProject = exports.closeoutProject = exports.deleteProject = exports.checkUpdatedProjectGeneralInfo = exports.updateProjectGeneralInfo = void 0;
const core_1 = require("@serenity-js/core");
const web_1 = require("@serenity-js/web");
const DefaultStaticParams_1 = require("../../../DefaultStaticParams");
const common_1 = require("../../common");
const statics_1 = require("../../common/statics");
const EditProjectFields_1 = require("../components/EditProjectFields");
const ProjectTab_1 = require("../components/ProjectTab");
exports.updateProjectGeneralInfo = {
    using: (projectInfo) => {
        const timestamp = common_1.formatted_now;
        return core_1.Task.where(`#actor update project general information`, EditProjectFields_1.project.fillTextInputField('Project', projectInfo.rowsHash().Project + timestamp), EditProjectFields_1.project.setCookie(statics_1.COOKIE_PROJECT_NAME, projectInfo.rowsHash().Project + timestamp), 
        // 非必填字段
        core_1.Wait.for(core_1.Duration.ofSeconds(5)), EditProjectFields_1.project.fillTextInputField('Account Number', projectInfo.rowsHash().AccountNumber), EditProjectFields_1.project.clickSingleCheckBox('Is Annual Project', projectInfo.rowsHash().IsAnnualProject), EditProjectFields_1.project.selectItemInlookupPopup('Primary Fund Group', projectInfo.rowsHash().PrimaryFundGroup, 'Fund Group ID'), core_1.Wait.for(core_1.Duration.ofSeconds(5)), EditProjectFields_1.project.fillDropdownInputField('Service Department', projectInfo.rowsHash().ServiceDepartment), core_1.Wait.for(core_1.Duration.ofSeconds(5)), EditProjectFields_1.project.fillDropdownInputField('Department Priority Ranking', projectInfo.rowsHash().DepartmentPriorityRanking), core_1.Wait.for(core_1.Duration.ofSeconds(5)), EditProjectFields_1.project.fillDropdownInputField('Project Intent', projectInfo.rowsHash().ProjectIntent), core_1.Wait.for(core_1.Duration.ofSeconds(5)), EditProjectFields_1.project.fillDropdownInputField('Subprogram', projectInfo.rowsHash().Subprogram), EditProjectFields_1.project.fillDropdownInputField('District', projectInfo.rowsHash().District), EditProjectFields_1.project.fillTextInputField('Contact Person', projectInfo.rowsHash().ContactPerson), EditProjectFields_1.project.fillTextInputField('Page Number', projectInfo.rowsHash().PageNumber), EditProjectFields_1.project.fillTextInputField('Phone Number', projectInfo.rowsHash().PhoneNumber), EditProjectFields_1.project.fillDropdownInputField('Project Type', projectInfo.rowsHash().ProjectType), EditProjectFields_1.project.fillTextInputField('Project Location', projectInfo.rowsHash().ProjectLocation), EditProjectFields_1.project.fillTextInputField('Location Description', projectInfo.rowsHash().LocationDescription), EditProjectFields_1.project.fillTextInputField('Address', projectInfo.rowsHash().Address), EditProjectFields_1.project.fillTextInputField('Zip Code', projectInfo.rowsHash().ZipCode), EditProjectFields_1.project.fillTextInputField('Project Description', projectInfo.rowsHash().ProjectDescription), EditProjectFields_1.project.fillTextInputField('Project Justification', projectInfo.rowsHash().ProjectJustification), EditProjectFields_1.project.fillTextInputField('Proposed Project Funding', projectInfo.rowsHash().ProposedProjectFunding), EditProjectFields_1.project.fillTextInputField('Operation Impact', projectInfo.rowsHash().OperationImpact), EditProjectFields_1.project.fillTextInputField('Other Information', projectInfo.rowsHash().OtherInformation), web_1.Click.on(EditProjectFields_1.project.ralationshipAttributeLookupFieldClearIcon('Project Manager')), EditProjectFields_1.project.selectItemInRelationshipAttributeInLookupPopup('Project Manager', projectInfo.rowsHash().ProjectManager, 'Resource Name'), 
        // 提交
        common_1.clickActionButton.using(DefaultStaticParams_1.SAVE), EditProjectFields_1.project.waitMessagePopupBoxVisible(), core_1.Wait.for(core_1.Duration.ofSeconds(5)));
    }
};
exports.checkUpdatedProjectGeneralInfo = {
    using: (projectInfo) => {
        return core_1.Task.where(`#actor check updated project general information`, EditProjectFields_1.project.checkTextInputFieldValue('Project', web_1.Cookie.called(statics_1.COOKIE_PROJECT_NAME).value(), DefaultStaticParams_1.SUCCEEDED), 
        // project.checkLookupInputFieldSingleValue('Parent Project', projectInfo.rowsHash().ParentProject, SUCCEEDED),
        EditProjectFields_1.project.checkTextInputFieldValue('Account Number', projectInfo.rowsHash().AccountNumber, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkLookupInputFieldSingleValue('Primary Fund Group', projectInfo.rowsHash().PrimaryFundGroup, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkDropdownInputFieldValue('Service Department', projectInfo.rowsHash().ServiceDepartment, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkDropdownInputFieldValue('Department Priority Ranking', projectInfo.rowsHash().DepartmentPriorityRanking, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkDropdownInputFieldValue('Project Intent', projectInfo.rowsHash().ProjectIntent, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkDropdownInputFieldValue('Subprogram', projectInfo.rowsHash().Subprogram, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkDropdownInputFieldValue('District', projectInfo.rowsHash().District, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkTextInputFieldValue('Contact Person', projectInfo.rowsHash().ContactPerson, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkTextInputFieldValue('Page Number', projectInfo.rowsHash().PageNumber, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkTextInputFieldValue('Phone Number', projectInfo.rowsHash().PhoneNumber, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkDropdownInputFieldValue('Project Type', projectInfo.rowsHash().ProjectType, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkTextInputFieldValue('Project Location', projectInfo.rowsHash().ProjectLocation, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkTextInputFieldValue('Location Description', projectInfo.rowsHash().LocationDescription, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkTextInputFieldValue('Address', projectInfo.rowsHash().Address, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkTextInputFieldValue('Zip Code', projectInfo.rowsHash().ZipCode, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkTextInputFieldValue('Project Description', projectInfo.rowsHash().ProjectDescription, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkTextInputFieldValue('Project Justification', projectInfo.rowsHash().ProjectJustification, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkTextInputFieldValue('Proposed Project Funding', projectInfo.rowsHash().ProposedProjectFunding, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkTextInputFieldValue('Operation Impact', projectInfo.rowsHash().OperationImpact, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkTextInputFieldValue('Other Information', projectInfo.rowsHash().OtherInformation, DefaultStaticParams_1.SUCCEEDED), EditProjectFields_1.project.checkRelationshipAttributeLookupInputFieldMultiValue('Project Manager', projectInfo.rowsHash().ProjectManager, DefaultStaticParams_1.SUCCEEDED));
    }
};
exports.deleteProject = {
    using: (projectName) => core_1.Task.where(`#actor delete Project ${projectName}`, common_1.clickButton.using(DefaultStaticParams_1.DELETE), common_1.clickMessagePopupButton.using(DefaultStaticParams_1.OK), core_1.Wait.for(core_1.Duration.ofSeconds(5)))
};
exports.closeoutProject = {
    using: (projectName) => core_1.Task.where(`#actor closeout Project ${projectName}`, ProjectTab_1.projectTab.clickTab('Closeout'), EditProjectFields_1.project.fillDropdownInputField('Open/Closed Status', 'Closed'), common_1.clickButton.using(DefaultStaticParams_1.SAVE), (0, common_1.waitMessagePopupBoxVisible)(), core_1.Wait.for(core_1.Duration.ofSeconds(5)))
};
const openProject = () => core_1.Task.where(`#actor open Project`, ProjectTab_1.projectTab.clickTab('Closeout'), EditProjectFields_1.project.fillDropdownInputField('Open/Closed Status', 'Open'), common_1.clickButton.using(DefaultStaticParams_1.SAVE), (0, common_1.waitMessagePopupBoxVisible)(), core_1.Wait.for(core_1.Duration.ofSeconds(5)));
exports.openProject = openProject;
//# sourceMappingURL=ProjectGeneralInfo.js.map