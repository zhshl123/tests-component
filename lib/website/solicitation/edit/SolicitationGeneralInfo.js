"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteSolicitation = exports.checkUpdatedSolicitationGeneralInfo = exports.updateSolicitationGeneralInfo = void 0;
const assertions_1 = require("@serenity-js/assertions");
const core_1 = require("@serenity-js/core");
const web_1 = require("@serenity-js/web");
const DefaultStaticParams_1 = require("../../../DefaultStaticParams");
const common_1 = require("../../common");
const statics_1 = require("../../common/statics");
const BrowseSolicitationField_1 = require("../components/BrowseSolicitationField");
const EditSolicitationFields_1 = require("../components/EditSolicitationFields");
exports.updateSolicitationGeneralInfo = {
    using: (solicitationInfo) => {
        const timestamp = common_1.formatted_now;
        const publicationDateParts = solicitationInfo.rowsHash().PublicationDate.split(' ');
        const publicationDate = publicationDateParts[0];
        const publicationTime = publicationDateParts[1] + ' ' + publicationDateParts[2];
        const BidDueDateParts = solicitationInfo.rowsHash().BidDueDate.split(' ');
        const bidDueDate = BidDueDateParts[0];
        const bidDueTime = BidDueDateParts[1] + ' ' + BidDueDateParts[2];
        const QADatelineParts = solicitationInfo.rowsHash().QADateline.split(' ');
        const qaDateline = QADatelineParts[0];
        const qaDatelineTime = QADatelineParts[1] + ' ' + QADatelineParts[2];
        const BidderMeetingDateParts = solicitationInfo.rowsHash().BidderMeetingDate.split(' ');
        const bidderMeetingDate = BidderMeetingDateParts[0];
        const bidderMeetingTime = BidderMeetingDateParts[1] + ' ' + BidderMeetingDateParts[2];
        return core_1.Task.where(`#actor update solicitation general information`, EditSolicitationFields_1.solicitation.fillTextInputField('Solicitation ID', solicitationInfo.rowsHash().SolicitationID + timestamp), EditSolicitationFields_1.solicitation.setCookie(statics_1.COOKIE_SOLICITATION_ID, solicitationInfo.rowsHash().SolicitationID + timestamp), EditSolicitationFields_1.solicitation.fillTextInputField('Solicitation Name', solicitationInfo.rowsHash().SolicitationName + timestamp), EditSolicitationFields_1.solicitation.setCookie(statics_1.COOKIE_SOLICITATION_NAME, solicitationInfo.rowsHash().SolicitationName + timestamp), EditSolicitationFields_1.solicitation.selectSpecialDate('Publication Date', publicationDate, 0), EditSolicitationFields_1.solicitation.selectClock('Publication Date', publicationTime), EditSolicitationFields_1.solicitation.selectSpecialDate('Bid Due Date', bidDueDate, 1), EditSolicitationFields_1.solicitation.selectClock('Bid Due Date', bidDueTime), EditSolicitationFields_1.solicitation.clickSingleCheckBox('Is Sealed Bid', solicitationInfo.rowsHash().IsSealedBid), EditSolicitationFields_1.solicitation.selectDropdownItem('Status', solicitationInfo.rowsHash().Status), EditSolicitationFields_1.solicitation.selectDropdownItem('Process Type', solicitationInfo.rowsHash().ProcessType), web_1.Click.on(EditSolicitationFields_1.solicitation.lookupInputFieldClearIcon('Department')), EditSolicitationFields_1.solicitation.selectLookupDropdownItem('Department', solicitationInfo.rowsHash().Department), EditSolicitationFields_1.solicitation.selectItemInlookupPopup('Bid Manager', solicitationInfo.rowsHash().BidManager, 'Resource Name'), EditSolicitationFields_1.solicitation.clickSingleCheckBox('Bidder Meeting Required', solicitationInfo.rowsHash().BidderMeetingRequired), EditSolicitationFields_1.solicitation.fillTextInputField('Bidder Meeting Location', solicitationInfo.rowsHash().BidderMeetingLocation), EditSolicitationFields_1.solicitation.fillTextInputField('Contact', solicitationInfo.rowsHash().Contact), EditSolicitationFields_1.solicitation.fillTextInputField('Phone', solicitationInfo.rowsHash().Phone), EditSolicitationFields_1.solicitation.fillTextInputField('Email', solicitationInfo.rowsHash().Email), EditSolicitationFields_1.solicitation.fillTextInputField('Address', solicitationInfo.rowsHash().Address), 
        // 先清除输入框的内容
        web_1.Click.on(EditSolicitationFields_1.solicitation.ralationshipAttributeLookupFieldClearIcon('Associated Projects')), EditSolicitationFields_1.solicitation.selectItemInRelationshipAttributeInLookupPopup('Associated Projects', solicitationInfo.rowsHash().AssociatedProjects, 'Project Name'), web_1.Click.on(EditSolicitationFields_1.solicitation.ralationshipAttributeLookupFieldClearIcon('Classifications')), EditSolicitationFields_1.solicitation.selectrelationshipAttributeLookupDropdownItem('Classifications', solicitationInfo.rowsHash().Classifications), web_1.Click.on(EditSolicitationFields_1.solicitation.ralationshipAttributeLookupFieldClearIcon('NAICS')), EditSolicitationFields_1.solicitation.selectNAICSItemInlookupPopup('NAICS', solicitationInfo.rowsHash().NAICS, 'NAICS Code'), EditSolicitationFields_1.solicitation.selectSpecialDate('Q&A Deadline', qaDateline, 2), EditSolicitationFields_1.solicitation.selectClock('Q&A Deadline', qaDatelineTime), EditSolicitationFields_1.solicitation.selectSpecialDate('Bidder Meeting Date', bidderMeetingDate, 3), EditSolicitationFields_1.solicitation.selectClock('Bidder Meeting Date', bidderMeetingTime), 
        // 提交
        common_1.clickButton.using(DefaultStaticParams_1.SAVE), (0, common_1.waitMessagePopupBoxVisible)());
    }
};
exports.checkUpdatedSolicitationGeneralInfo = {
    using: (solicitationInfo) => {
        return core_1.Task.where(`#actor check updated contract general information`, core_1.Check.whether(web_1.Page.current().title(), (0, assertions_1.includes)(statics_1.SOLICITATION_MANAGEMENT)).andIfSo(core_1.Log.the('current page is Solicitation Management')).otherwise(BrowseSolicitationField_1.browseSolicitation.searchItemAndEdit(statics_1.BROWSE_SOLICITATIONS, 'Solicitation ID', web_1.Cookie.called(statics_1.COOKIE_SOLICITATION_ID).value())), EditSolicitationFields_1.solicitation.checkTextInputFieldValue('Solicitation ID', web_1.Cookie.called(statics_1.COOKIE_SOLICITATION_ID).value(), DefaultStaticParams_1.SUCCEEDED), EditSolicitationFields_1.solicitation.checkTextInputFieldValue('Solicitation Name', web_1.Cookie.called(statics_1.COOKIE_SOLICITATION_NAME).value(), DefaultStaticParams_1.SUCCEEDED), EditSolicitationFields_1.solicitation.checkDateInputFieldValue('Publication Date', solicitationInfo.rowsHash().PublicationDate, DefaultStaticParams_1.SUCCEEDED), EditSolicitationFields_1.solicitation.checkDateInputFieldValue('Bid Due Date', solicitationInfo.rowsHash().BidDueDate, DefaultStaticParams_1.SUCCEEDED), EditSolicitationFields_1.solicitation.checkDropdownInputFieldValue('Status', solicitationInfo.rowsHash().Status, DefaultStaticParams_1.SUCCEEDED), EditSolicitationFields_1.solicitation.checkDropdownInputFieldValue('Process Type', solicitationInfo.rowsHash().ProcessType, DefaultStaticParams_1.SUCCEEDED), assertions_1.Ensure.eventually(EditSolicitationFields_1.solicitation.departmentLookupInputFieldValue('Department', solicitationInfo.rowsHash().Department), (0, web_1.isVisible)()), EditSolicitationFields_1.solicitation.checkLookupInputFieldSingleValue('Bid Manager', solicitationInfo.rowsHash().BidManager, DefaultStaticParams_1.SUCCEEDED), EditSolicitationFields_1.solicitation.checkTextInputFieldValue('Bidder Meeting Location', solicitationInfo.rowsHash().BidderMeetingLocation, DefaultStaticParams_1.SUCCEEDED), EditSolicitationFields_1.solicitation.checkTextInputFieldValue('Contact', solicitationInfo.rowsHash().Contact, DefaultStaticParams_1.SUCCEEDED), EditSolicitationFields_1.solicitation.checkTextInputFieldValue('Phone', solicitationInfo.rowsHash().Phone, DefaultStaticParams_1.SUCCEEDED), EditSolicitationFields_1.solicitation.checkTextInputFieldValue('Email', solicitationInfo.rowsHash().Email, DefaultStaticParams_1.SUCCEEDED), EditSolicitationFields_1.solicitation.checkTextInputFieldValue('Address', solicitationInfo.rowsHash().Address, DefaultStaticParams_1.SUCCEEDED), assertions_1.Ensure.eventually(web_1.Text.of(EditSolicitationFields_1.solicitation.relationshipAttributeLookupInputFieldMultiValue('Associated Projects').first()), (0, assertions_1.includes)(solicitationInfo.rowsHash().AssociatedProjects)), EditSolicitationFields_1.solicitation.checkRelationshipAttributeLookupInputFieldMultiValue('Classifications', solicitationInfo.rowsHash().Classifications, DefaultStaticParams_1.SUCCEEDED), EditSolicitationFields_1.solicitation.checkTreeLookupInputFieldMultiValue('NAICS', solicitationInfo.rowsHash().NAICS, DefaultStaticParams_1.SUCCEEDED));
    }
};
exports.deleteSolicitation = {
    using: (solicitationID) => core_1.Task.where(`#actor delete solicitation ${solicitationID}`, common_1.clickButton.using(DefaultStaticParams_1.DELETE), common_1.clickSolicitationMessagePopupButton.using(DefaultStaticParams_1.OK), core_1.Wait.for(core_1.Duration.ofSeconds(5)))
};
//# sourceMappingURL=SolicitationGeneralInfo.js.map